import React, { useState } from 'react';
import { Head, Link, usePage } from '@inertiajs/react';
import { Button } from '@/Components/UI/button';
import { Input } from '@/Components/UI/input';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/Components/UI/table';
import { Pagination } from '@/Components/UI/pagination';
import { AuthenticatedLayout } from '@/Layouts/AuthenticatedLayout';
import { {{modelName}}Resource } from '@/Support/Interfaces/Resources/{{modelName}}Resource';
import { PaginatedData } from '@/Support/Interfaces/PaginatedData';

interface Props {
    {{modelVariablePlural}}: PaginatedData<{{modelName}}Resource>;
    filters: {
        search?: string;
        page?: number;
        pageSize?: number;
        order?: string;
        dir?: 'asc' | 'desc';
    };
}

export default function Index({ {{modelVariablePlural}}, filters }: Props) {
    const [search, setSearch] = useState(filters.search || '');
    
    const handleSearch = (e: React.FormEvent) => {
        e.preventDefault();
        
        window.location.href = route('{{routeName}}.index', {
            ...filters,
            search,
            page: 1
        });
    };
    
    return (
        <AuthenticatedLayout>
            <Head title="{{modelNamePlural}}" />
            
            <div className="py-12">
                <div className="mx-auto max-w-7xl sm:px-6 lg:px-8">
                    <div className="mb-6 flex items-center justify-between">
                        <h1 className="text-2xl font-semibold">{{modelNamePlural}}</h1>
                        <Button asChild>
                            <Link href={route('{{routeName}}.create')}>Create New</Link>
                        </Button>
                    </div>
                    
                    <form onSubmit={handleSearch} className="mb-6">
                        <div className="flex gap-2">
                            <Input 
                                value={search}
                                onChange={e => setSearch(e.target.value)}
                                placeholder="Search..."
                                className="max-w-sm"
                            />
                            <Button type="submit">Search</Button>
                        </div>
                    </form>
                    
                    <div className="overflow-hidden rounded-lg border bg-white shadow-sm">
                        <Table>
                            <TableHeader>
                                <TableRow>
                                    <TableHead>ID</TableHead>
                                    {/* Add your column headers here */}
                                    <TableHead>Created</TableHead>
                                    <TableHead className="text-right">Actions</TableHead>
                                </TableRow>
                            </TableHeader>
                            <TableBody>
                                {{{modelVariablePlural}}.data.length === 0 ? (
                                    <TableRow>
                                        <TableCell colSpan={3} className="text-center py-8">
                                            No {{modelVariablePlural}} found
                                        </TableCell>
                                    </TableRow>
                                ) : (
                                    {{modelVariablePlural}}.data.map(({{modelVariable}}) => (
                                        <TableRow key={{{modelVariable}}.id}>
                                            <TableCell>{{{modelVariable}}.id}</TableCell>
                                            {/* Add your data columns here */}
                                            <TableCell>{{{modelVariable}}.created_at}</TableCell>
                                            <TableCell className="text-right">
                                                <div className="flex justify-end gap-2">
                                                    <Button 
                                                        size="sm" 
                                                        variant="outline"
                                                        asChild
                                                    >
                                                        <Link href={route('{{routeName}}.edit', {{modelVariable}}.id)}>Edit</Link>
                                                    </Button>
                                                    <Button 
                                                        size="sm" 
                                                        variant="outline" 
                                                        onClick={() => {
                                                            if (confirm('Are you sure you want to delete this {{modelVariable}}?')) {
                                                                router.delete(route('{{routeName}}.destroy', {{modelVariable}}.id));
                                                            }
                                                        }}
                                                    >
                                                        Delete
                                                    </Button>
                                                </div>
                                            </TableCell>
                                        </TableRow>
                                    ))
                                )}
                            </TableBody>
                        </Table>
                    </div>
                    
                    {{{modelVariablePlural}}.data.length > 0 && (
                        <div className="mt-4">
                            <Pagination 
                                currentPage={{{modelVariablePlural}}.meta.current_page}
                                lastPage={{{modelVariablePlural}}.meta.last_page}
                                total={{{modelVariablePlural}}.meta.total}
                                perPage={{{modelVariablePlural}}.meta.per_page}
                                from={{{modelVariablePlural}}.meta.from}
                                to={{{modelVariablePlural}}.meta.to}
                                links={{{modelVariablePlural}}.meta.links}
                            />
                        </div>
                    )}
                </div>
            </div>
        </AuthenticatedLayout>
    );
}
