import { useForm } from '@inertiajs/react';
import { Button } from '@/Components/UI/button';
import { Input } from '@/Components/UI/input';
import { Label } from '@/Components/UI/label';
import { Textarea } from '@/Components/UI/textarea';
import { Checkbox } from '@/Components/UI/checkbox';
import { Select, SelectTrigger, SelectContent, SelectItem, SelectValue } from '@/Components/UI/select';
import { {{modelName}} } from '@/Support/Interfaces/Models/{{modelName}}';

interface {{modelName}}FormProps {
    {{modelVariable}}?: {{modelName}};
    isEditing?: boolean;
}

export default function {{modelName}}Form({ {{modelVariable}}, isEditing = false }: {{modelName}}FormProps) {
    const { data, setData, post, put, processing, errors } = useForm<Partial<{{modelName}}>>({
        // Default form values
{{formDefaults}}
    });

    const handleSubmit = (e: React.FormEvent) => {
        e.preventDefault();
        
        if (isEditing && {{modelVariable}}?.id) {
            put(route('{{routeName}}.update', {{modelVariable}}.id));
        } else {
            post(route('{{routeName}}.store'));
        }
    };

    return (
        <form onSubmit={handleSubmit} className="space-y-6">
            <div className="grid grid-cols-1 gap-6 md:grid-cols-2">
{{formFields}}
            </div>

            <div className="flex justify-end gap-3">
                <Button type="button" variant="outline" onClick={() => window.history.back()}>
                    Cancel
                </Button>
                <Button type="submit" disabled={processing}>
                    {isEditing ? 'Update' : 'Create'} {{modelName}}
                </Button>
            </div>
        </form>
    );
}
