<?php

namespace App\Http\Controllers\Api;

use App\Http\Requests\{{ modelName }}\Store{{ modelName }}Request;
use App\Http\Requests\{{ modelName }}\Update{{ modelName }}Request;
use App\Http\Resources\{{ modelName }}Resource;
use App\Models\{{ modelName }};
use App\Support\Interfaces\Services\{{ modelName }}ServiceInterface;
use Illuminate\Http\Request;

class Api{{ modelName }}Controller extends ApiController {
    public function __construct(
        protected {{ modelName }}ServiceInterface ${{ modelNameCamel }}Service
    ) {}

    /**
     * Display a listing of the resource.
     */
    public function index(Request $request) {
        $perPage = request()->get('perPage', 5);

        return {{ modelName }}Resource::collection($this->{{ modelNameCamel }}Service->getAllPaginated($request->query(), $perPage));
    }

    /**
     * Store a newly created resource in storage.
     */
    public function store(Store{{ modelName }}Request $request) {
        return $this->{{ modelNameCamel }}Service->create($request->validated());
    }

    /**
     * Display the specified resource.
     */
    public function show({{ modelName }} ${{ modelNameCamel }}) {
        return new {{ modelName }}Resource(${{ modelNameCamel }}->load(['roles' => ['division', 'permissions']]));
    }

    /**
     * Update the specified resource in storage.
     */
    public function update(Update{{ modelName }}Request $request, {{ modelName }} ${{ modelNameCamel }}) {
        return $this->{{ modelNameCamel }}Service->update(${{ modelNameCamel }}, $request->validated());
    }

    /**
     * Remove the specified resource from storage.
     */
    public function destroy(Request $request, {{ modelName }} ${{ modelNameCamel }}) {
        return $this->{{ modelNameCamel }}Service->delete(${{ modelNameCamel }});
    }
}
