<?php

return [
    'generic_data_selector' => [
        'fields' => [
            'search_placeholder' => 'Search...',
            'select_placeholder' => 'Select',
        ],
        'actions' => [
            'clear_selection' => '-- Clear Selection --',
            'loading' => 'Loading...',
            'no_results' => 'No results found',
        ],
    ],
    'generic_filters' => [
        'fields' => [
            'search_placeholder' => 'Search...',
            'select_placeholder' => 'Select',
            'pagination_placeholder' => 'Items per page',
            'all' => 'All',
        ],
    ],
    'dropdown_menu' => [
        'sr_open_menu' => 'Open menu',
    ],
    'dashboard_sidebar' => [
        'dashboard' => 'Dashboard',
        'admin' => [
            'title' => 'Administration',
            'users' => 'Users',
            'roles' => 'Roles',
            'permissions' => 'Permissions',
            'settings' => 'Settings',
        ],
        'academic' => [
            'title' => 'Academic',
            'schools' => 'Schools',
            'school_requests' => 'School Requests',
            'students' => 'Students',
            'teachers' => 'Teachers',
            'classes' => 'Classes',
            'subjects' => 'Subjects',
            'exams' => 'Exams',
            'grades' => 'Grades',
            'class_rooms' => 'Classrooms',
            'courses' => 'Courses',
            'student_cognitive_classifications' => 'Student Cognitive Classifications',
            'student_course_cognitive_classifications' => 'Student Course Cognitive Classifications',
            'test_case_change_trackers' => 'Test Case Change Trackers',
        ],
        'student' => [
            'title' => 'Student',
            'courses' => 'My Courses',
            'progress' => 'My Progress',
        ],
    ],
    'filepond' => [
        'labels' => [
            'label_idle' => 'Drag and drop files here or <span class="filepond--label-action">Browse</span>',
            'label_tap_to_cancel' => 'tap to cancel',
            'label_tap_to_retry' => 'tap to retry',
            'label_tap_to_undo' => 'tap to undo',
            'label_button_remove_item' => 'Remove',
            'label_button_process_item' => 'Upload',
            'label_button_undo_item_processing' => 'Undo',
            'label_button_retry_item_processing' => 'Retry',
            'label_button_process_item_upload' => 'Upload',
            'label_file_waiting_for_size_calculation' => 'Waiting for size...',
            'label_file_size_not_available' => 'Size not available',
            'label_file_loading_error' => 'Error during loading',
            'label_file_processing' => 'Uploading',
            'label_file_processing_complete' => 'Upload complete',
            'label_file_processing_aborted' => 'Upload cancelled',
            'label_file_processing_error' => 'Error during upload',
        ],
        'errors' => [
            'size_too_large' => 'File is too large. Maximum size is :filesize.',
            'file_type_not_allowed' => 'File type not supported.',
        ],
    ],
    'pdf_viewer' => [
        'document' => 'Document',
        'page_of_pages' => 'Page :current of :total',
        'error_loading' => 'Error loading PDF document',
        'no_preview' => 'PDF preview not available',
        'open_in_new_tab' => 'Open in new tab',
        'page' => 'Page',
        'loading_secure' => 'Loading secure document...',
        'error_generic' => 'An error occurred while loading the document',
        'fallback_view' => 'View in new tab',
        'no_source' => 'No document source available',
        'secure_view' => 'Secure View',
        'download' => 'Download document',
        'rendering' => 'Rendering document...',
        'fit_width' => 'Fit to width',
        'zoom_presets' => 'Zoom presets',
        'zoom_in' => 'Zoom in',
        'zoom_out' => 'Zoom out',
        'search_zoom' => 'Search zoom levels...',
        'no_zoom_found' => 'No zoom level found',
        'current' => 'Current',
    ],
    'code_editor' => [
        'theme' => 'Editor Theme',
        'search_theme' => 'Search theme...',
        'no_theme_found' => 'No theme found',
    ],
    'data_table' => [
        'search' => 'Search...',
        'per_page' => 'Per page',
        'no_results' => 'No results found',
        'filter_button' => 'Filter',
        'filter_title' => 'Filters',
        'clear_filters' => 'Clear Filters',
        'apply_filters' => 'Apply Filters',
        'columns_visibility' => 'Columns Visibility',
    ],
    'sort_options_dialog' => [
        'title' => 'Sort Options',
        'description' => 'Choose how to sort the data',
        'column_sort' => 'Sort by Column',
        'relation_sort' => 'Sort by Relation Count',
        'columns_tab' => 'Columns',
        'relations_tab' => 'Relations',
        'apply' => 'Apply Sorting',
        'reset' => 'Reset All',
        'reset_column' => 'Clear',
        'reset_relation' => 'Clear',
        'no_options' => 'No sort options available',
    ],
    'test_case_debugger' => [
        'title' => 'Test Case Debugger',
        'code_label' => 'Student Code',
        'instruction' => 'This simulates a student\'s code. Write code to test against the test case.',
        'run_button' => 'Run Test Case',
        'test_passed' => 'Test Passed',
        'test_failed' => 'Test Failed',
        'view_details' => 'View Details',
        'execution_error' => 'Error executing code',
        'no_code' => 'Please enter some code before running',
        'execution_details' => 'Execution Details',
        'output_summary' => 'Output Summary',
        'test_case' => 'Test Case Code',
        'detailed_results' => 'Detailed Results',
        'fastapi_response' => 'FastAPI Response',
    ],
    'test_case_info' => [
        'title' => 'Test Case Guidelines',
        'student_code' => 'Access student code with the "student_code" variable',
        'unittest' => 'Use Python unittest assertions (assertEqual, assertTrue, etc.)',
        'example' => 'Example: self.assertEqual(eval(student_code), 10)',
        'direct_access' => 'Direct access to student functions is allowed (e.g., self.assertEqual(add(5, 5), 10))',
    ],
    'test_case_examples' => [
        'title' => 'Example Test Cases',
        'description' => 'Click an example to insert it into the input field.',
        'docs_link' => 'Python unittest documentation',
    ],
];
