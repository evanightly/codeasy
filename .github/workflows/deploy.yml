name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  format:
    name: Format Code
    # Skip if commit is from github-actions bot to prevent infinite loop
    if: github.actor != 'github-actions[bot]'
    uses: ./.github/workflows/codefixing.yml
    secrets: inherit

  build-and-push:
    name: Build & Push Docker Image
    needs: format
    if: always() && (needs.format.result == 'success' || needs.format.result == 'skipped')
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.IMAGE_REPOSITORY_TOKEN }}

      - name: Build & Push Docker Image
        run: |
          docker build \
            -t ghcr.io/${{ github.repository_owner }}/codeasy:latest \
            -f docker/laravel.prod.Dockerfile .

          docker push ghcr.io/${{ github.repository_owner }}/codeasy:latest

  deploy:
    name: Deploy to VPS
    needs: build-and-push
    if: needs.build-and-push.result == 'success'
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add SSH Known Hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to VPS
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
          CR_PAT: ${{ secrets.IMAGE_REPOSITORY_TOKEN }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          DOCKER_CONFIG_CONTENT="{\"auths\":{\"ghcr.io\":{\"auth\":\"$(echo -n \"$GITHUB_ACTOR:$CR_PAT\" | base64)\"}}}"

          ssh $SSH_USERNAME@$SSH_HOST 'bash -s' << 'ENDSSH'
            set -ex

            mkdir -p ~/.docker
            echo "$DOCKER_CONFIG_CONTENT" > ~/.docker/config.json

            if [ ! -d "codeasy/.git" ]; then
              echo "Repo not found, cloning..."
              git clone https://github.com/evanightly/codeasy.git "codeasy"
            else
              echo "Repo already present, skipping clone."
            fi

            cd "codeasy"
            git fetch --all
            git reset --hard origin/main

            echo "${{ secrets.PRODUCTION_ENV }}" > laravel/.env || {
              echo "Failed to create .env file"
              exit 1
            }

            docker compose -f docker-compose.prod.yml down || echo "No containers to stop"
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d

            echo "Deployment completed!"
          ENDSSH