name: Deploy to Production (Jagoan Hosting)
on:
  push:
    branches: [main]

jobs:
  codefixing:
    name: CodeFixing
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./laravel
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
      - name: Install PHP dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Run Pint Fix
        run: ./vendor/bin/pint
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './laravel/package-lock.json'
      - name: Install Node.js dependencies
        run: npm install -D
      - name: Run NPM Lint
        run: npm run lint
      - name: Run Prettier
        run: npm run prettier
      - name: Check for changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m 'codefixing'
            git push
          else
            echo "No changes to commit"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-and-push:
    name: Build & Push Docker Image
    needs: codefixing
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          lfs: true
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CODEASY_PROD_LARAVEL_IMAGE_PAT }}
      - name: Test GHCR Access
        run: |
          echo "Testing GHCR authentication..."
          docker pull ghcr.io/${{ github.repository_owner }}/codeasy-prod-laravel-image:latest || true
      - name: Build & Push Docker Image
        run: |
          docker build \
            -t ghcr.io/${{ github.repository_owner }}/codeasy-prod-laravel-image:latest \
            -f docker/laravel.prod.Dockerfile .
          docker push ghcr.io/${{ github.repository_owner }}/codeasy-prod-laravel-image:latest

  deploy:
    name: Deploy to VPS (Jagoan Hosting)
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass
      - name: Deploy via SSH using sshpass
        env:
          SSH_HOST: ${{ secrets.JAGOAN_SSH_HOST }}         
          SSH_USERNAME: ${{ secrets.JAGOAN_SSH_USERNAME }}    
          SSH_PASSWORD: ${{ secrets.JAGOAN_SSH_PASSWORD }}    
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          sshpass -p "$SSH_PASSWORD" ssh -o StrictHostKeyChecking=no $SSH_USERNAME@$SSH_HOST bash -s << 'ENDSSH'
            set -ex
            mkdir -p ~/.docker
            echo '{
              "auths": {
                "ghcr.io": {
                  "auth": "'"$(echo -n "$GITHUB_ACTOR:$SSH_PASSWORD" | base64)"'"
                }
              }
            }' > ~/.docker/config.json
            chmod 600 ~/.docker/config.json

            echo "Pulling Docker image..."
            docker pull ghcr.io/$GITHUB_ACTOR/codeasy-prod-laravel-image:latest

            if [ ! -d "codeasy/.git" ]; then
              git clone https://github.com/evanightly/codeasy.git
              cd codeasy
              git lfs install
              git lfs pull
            else
              cd codeasy
              git lfs install
              git fetch --all
              git reset --hard origin/main
              git lfs pull
            fi

            echo "${{ secrets.PRODUCTION_ENV }}" > laravel/.env

            docker compose -f docker-compose.prod.yml down || true
            docker system prune -af
            docker compose --env-file laravel/.env -f docker-compose.prod.yml pull
            docker compose --env-file laravel/.env -f docker-compose.prod.yml up -d

            echo "Jagoan Deployment completed successfully!"
          ENDSSH
